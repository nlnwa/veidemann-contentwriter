<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.nlnwa</groupId>
    <artifactId>veidemann-contentwriter</artifactId>
    <version>0</version>
    <packaging>jar</packaging>

    <organization>
        <name>National Library of Norway</name>
        <url>http://nb.no</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <org.jwat.version>1.1.1</org.jwat.version>
        <log4j.version>2.7</log4j.version>
        <rethinkdb.version>2.4.0</rethinkdb.version>

        <!--suppress UnresolvedMavenProperty -->
        <docker.tag>${env.DOCKER_TAG}</docker.tag>
        <!--suppress UnresolvedMavenProperty -->
        <docker.username>${env.DOCKER_USERNAME}</docker.username>
        <!--suppress UnresolvedMavenProperty -->
        <docker.password>${env.DOCKER_PASSWORD}</docker.password>
    </properties>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-api</artifactId>
            <version>1.0.0-beta12</version>
        </dependency>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-rethinkdbadapter</artifactId>
            <version>0.4.5</version>
        </dependency>
        <dependency>
            <groupId>com.github.nlnwa</groupId>
            <artifactId>veidemann-commons</artifactId>
            <version>0.4.1</version>
        </dependency>

        <!-- ARC/WARC libraries -->
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-common</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-gzip</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-warc</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jwat</groupId>
            <artifactId>jwat-archive</artifactId>
            <version>${org.jwat.version}</version>
        </dependency>

        <!-- Configuration framework -->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.4.0</version>
        </dependency>

        <!-- Do all logging thru Log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.26</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.8.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.27.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M3</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.29.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>2.0.0</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Make sure we are running tests sequentially -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1C</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
            <!-- Make version number available for application -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <to>
                        <image>docker.io/norsknettarkiv/${project.artifactId}</image>
                    </to>
                    <container>
                        <ports>
                            <port>8080</port>
                        </ports>
                        <volumes>
                            <volume>/workdir</volume>
                            <volume>/warcs</volume>
                        </volumes>
                        <environment>
                            <WORK_DIR>/workdir</WORK_DIR>
                            <WARC_DIR>/warcs</WARC_DIR>
                        </environment>
                        <jvmFlags>
                            <jvmFlag>-Dfile.encoding=UTF-8</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-build-and-push</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <to>
                                <tags>
                                    <tag>${docker.tag}</tag>
                                </tags>
                                <auth>
                                    <username>${docker.username}</username>
                                    <password>${docker.password}</password>
                                </auth>
                            </to>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>integration-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-tests</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>volume-create</goal>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                </configuration>
                            </execution>
                            <execution>
                                <id>remove-tests</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>volume-remove</goal>
                                </goals>
                                <configuration>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <removeVolumes>true</removeVolumes>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <verbose>false</verbose>
                            <startParallel>true</startParallel>
                            <volumes>
                                <volume>
                                    <name>contentwriter-rethink-data</name>
                                </volume>
                                <volume>
                                    <name>contentwriter-workdir</name>
                                </volume>
                                <volume>
                                    <name>contentwriter-warcs</name>
                                    <driver>local</driver>
                                    <opts>
                                        <type>tmpfs</type>
                                        <device>tmpfs</device>
                                    </opts>
                                    <labels>
                                        <volatileData>true</volatileData>
                                    </labels>
                                </volume>
                            </volumes>
                            <images>
                                <image>
                                    <name>rethinkdb:${rethinkdb.version}</name>
                                    <alias>db</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>contentwriter-test-net</name>
                                            <alias>db</alias>
                                        </network>
                                        <ports>
                                            <port>+db.host:db.port:28015</port>
                                            <port>+dbgui.host:dbgui.port:8080</port>
                                        </ports>
                                        <volumes>
                                            <bind>
                                                <volume>contentwriter-rethink-data:/data</volume>
                                            </bind>
                                        </volumes>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <tcp>
                                                <ports>
                                                    <port>8080</port>
                                                    <port>28015</port>
                                                    <port>29015</port>
                                                </ports>
                                            </tcp>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-db-initializer:0.4.5</name>
                                    <alias>db-initializer</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>contentwriter-test-net</name>
                                            <alias>db-initializer</alias>
                                        </network>
                                        <dependsOn>
                                            <container>db</container>
                                        </dependsOn>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <DB_USER>admin</DB_USER>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <exit>0</exit>
                                        </wait>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-contentwriter</name>
                                    <alias>contentwriter</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>contentwriter-test-net</name>
                                            <alias>contentwriter</alias>
                                        </network>
                                        <ports>
                                            <port>+contentwriter.host:contentwriter.port:8080</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                        </dependsOn>
                                        <volumes>
                                            <bind>
                                                <volume>contentwriter-warcs:/warcs</volume>
                                                <volume>contentwriter-workdir:/workdir</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <HOST_NAME>test-veidemann-contentwriter-uuid</HOST_NAME>
                                            <WARC_WRITER_POOL_SIZE>4</WARC_WRITER_POOL_SIZE>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann Content Writer .* started</log>
                                            <time>30000</time>
                                        </wait>
                                        <restartPolicy>
                                            <name>always</name>
                                        </restartPolicy>
                                    </run>
                                </image>
                                <image>
                                    <name>norsknettarkiv/veidemann-contentexplorer</name>
                                    <alias>contentexplorer</alias>
                                    <run>
                                        <network>
                                            <mode>custom</mode>
                                            <name>contentwriter-test-net</name>
                                            <alias>contentexplorer</alias>
                                        </network>
                                        <ports>
                                            <port>+contentexplorer.host:contentexplorer.port:8081</port>
                                        </ports>
                                        <dependsOn>
                                            <container>db-initializer</container>
                                        </dependsOn>
                                        <volumes>
                                            <bind>
                                                <volume>contentwriter-warcs:/warcs</volume>
                                                <volume>contentwriter-workdir:/workdir</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <DB_HOST>db</DB_HOST>
                                            <UNSAFE>true</UNSAFE>
                                        </env>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                        <wait>
                                            <log>Veidemann Content Explorer .* started</log>
                                            <time>30000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <!--suppress UnresolvedMavenProperty -->
                                <db.host>${db.host}</db.host>
                                <!--suppress UnresolvedMavenProperty -->
                                <db.port>${db.port}</db.port>
                                <!--suppress UnresolvedMavenProperty -->
                                <contentwriter.host>${contentwriter.host}</contentwriter.host>
                                <!--suppress UnresolvedMavenProperty -->
                                <contentwriter.port>${contentwriter.port}</contentwriter.port>
                                <!--suppress UnresolvedMavenProperty -->
                                <contentexplorer.host>${contentexplorer.host}</contentexplorer.host>
                                <!--suppress UnresolvedMavenProperty -->
                                <contentexplorer.port>${contentexplorer.port}</contentexplorer.port>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
